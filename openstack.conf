
#FIXME: Doesn't work. Need to specify these on the command line
#flags:
#  openstack_network: stackhpc-ipv4-geneve
#  os_type: ubuntu2004
#  cloud: OpenStack
#  image: Ubuntu-20.04

default_500_gb: &default_500_gb
 OpenStack:
    disk_size: 500
    disk_type: standard

local_disk: &local_disk
 OpenStack:
    disk_type: local
    device_path: /tmp
    mount_point: null

hpl_vm: &hpl_vm
  OpenStack:
    zone: nova
    machine_type: general.v1.large
    image: none

default_single_core: &default_single_core
  OpenStack:
    zone: nova
    machine_type: general.v1.tiny
    image: none

default_single_core: &default_dual_core
  OpenStack:
    zone: nova
    machine_type: general.v1.small
    image: none

cassandra_stress: &cassandra_stress
  vm_groups:
    workers:
      vm_spec: *default_single_core
      disk_spec: *default_500_gb
      vm_count: 3
    client:
      vm_spec: *default_single_core

redis_memtier: &redis_memtier
  vm_groups:
    servers:
      vm_spec: *default_dual_core
      vm_count: 1
    clients:
      vm_spec: *default_dual_core
      vm_count: 1

unixbench: &unixbench
  vm_groups:
    default:
      vm_spec: *default_single_core
      disk_spec: *default_500_gb

cassandra_ycsb: &cassandra_ycsb
  vm_groups:
    workers:
      vm_spec: *default_single_core
      disk_spec: *default_500_gb
    clients:
      vm_spec: *default_single_core

mongodb_ycsb: &mongodb_ycsb
  vm_groups:
    workers:
      vm_spec: *default_single_core
      disk_spec: *default_500_gb
      vm_count: 1
    clients:
      vm_spec: *default_single_core

fio: &fio
  description: Runs fio in sequential, random, read and write modes.
  vm_groups:
    default:
      vm_spec: *default_single_core
      disk_spec: *default_500_gb
      vm_count: null
  flags:
    fio_generate_scenarios:
       - seq_1M_write_100%
       - seq_1M_read_100%
       - rand_4k_readwrite_100%
       - rand_4k_write_100%
       - rand_4k_read_100%
    fio_target_mode: against_device_without_fill


fio_local: &fio_local
  description: Runs fio in sequential, random, read and write modes (local disk).
  vm_groups:
    default:
      vm_spec: *default_single_core
      disk_spec: *local_disk
      vm_count: null

iperf: &iperf
  description: Run iperf
  vm_groups:
    vm_1:
      vm_spec: *default_single_core
    vm_2:
      vm_spec: *default_single_core
  flags:
    openstack_scheduler_policy: anti-affinity
    iperf_runtime_in_seconds: 120
    iperf_sending_thread_count: 8

cluster_boot: &cluster_boot
  vm_groups:
    default:
      vm_spec: *default_single_core
      vm_count: 2
  flags:
    # We don't want boot time samples to be affected from retrying, so don't
    # retry cluster_boot when rate limited.
    retry_on_rate_limited: False

intel_hpl: &intel_hpl 
  vm_groups:
    default:
      vm_spec: *hpl_vm
      vm_count: null
  flags:
    hpcc_use_intel_compiled_hpl: true
    hpcc_benchmarks: HPL

hpcc: &hpcc
  vm_groups:
    default:
      vm_spec: *hpl_vm
      vm_count: null
    
benchmarks:
  - fio: *fio
  # Seems to require a secondary disk (ephemeral storage)
  #- fio: *fio_local
  - iperf: *iperf
  - unixbench: *unixbench
  - hpcc: *hpcc
  # NOTE: you need to run deps.sh for this to work
  - hpcc: *intel_hpl
  - cluster_boot: *cluster_boot
  - redis_memtier: *redis_memtier
  # Disabled as fails to start cluster.
  #- cassandra_stress: *cassandra_stress

